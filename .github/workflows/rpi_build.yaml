name: Test architecture matrix
on:
  push:
    branches:
      - 'main'
  workflow_dispatch:

jobs:
  build:
    name: Build on ${{ matrix.arch }} - py${{ matrix.python-sw }}
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-sw: ["3.11.1"]
        arch: [armv6l, armv7l, aarch64]
        include:
# arm1176 is the CPU of BCM2835 which is the SOC of first generation RaspberryPi and RaspberryPi Zero.
        - arch: armv6l
          cpu: arm1176
          # base_image: raspios_lite:latest
          base_image: https://downloads.raspberrypi.org/raspios_lite_armhf/images/raspios_lite_armhf-2022-09-26/2022-09-22-raspios-bullseye-armhf-lite.img.xz

# cortex-a7 equivalent to cortex-a7:cortex-a53. Optimized for later Pi models (Pi 3/Pi 4 and Pi Zero 2).
# Not suitable for Pi 1/Pi 2/Pi Zero.
        - arch: armv7l
          cpu: cortex-a7
          # base_image: raspios_lite:latest
          base_image: https://downloads.raspberrypi.org/raspios_lite_armhf/images/raspios_lite_armhf-2022-09-26/2022-09-22-raspios-bullseye-armhf-lite.img.xz

# cortex-a53 is the 64 bits CPU of the first 64 bits Raspberry Pi models
        - arch: aarch64
          cpu: cortex-a53
          # base_image: raspios_lite_arm64:latest
          base_image: https://downloads.raspberrypi.org/raspios_lite_arm64/images/raspios_lite_arm64-2022-09-26/2022-09-22-raspios-bullseye-arm64-lite.img.xz

    steps:
      - uses: actions/checkout@v3

      # python side
      # all useless, not visible into arm runner
#      - uses: actions/setup-python@v4
#        with:
#          python-version: "3.11"
#      - name: Setup Poetry
#        uses: abatilo/actions-poetry@v2
#        with:
#          poetry-version: "1.3"
#      - name: Install dependencies
#        run: |
#          python -m pip install --upgrade pip
#      - name: Set up QEMU
#        if: runner.os == 'Linux'
#        uses: docker/setup-qemu-action@v2
#        with:
#          platforms: all

      - uses: pguyot/arm-runner-action@v2
        with:
          base_image: ${{ matrix.base_image }}
          cpu: ${{ matrix.cpu }}
          cpu_info: ${{ matrix.cpu_info }}
          shell: bash
          image_additional_mb: 2048
          commands: |
            test `uname -m` = ${{ matrix.arch }}
            pwd
            ls
            mkdir -p dist
            python3 --version
            sudo apt update
            sudo apt install -y python3-pip build-essential gcc zlib1g-dev tree libncurses5-dev libgdbm-dev libnss3-dev wget automake autoconf libtool libffi-dev openssl bison byacc cscope universal-ctags cvs diffstat doxygen flex gcc gettext git indent intltool libtool patch patchutils rcs swig systemtap
            mkdir -p /opt/build_python/installed
            cd /opt/build_python
            wget https://www.python.org/ftp/python/${{ matrix.python-sw }}/Python-${{ matrix.python-sw }}.tar.xz > /dev/null 2>&1
            tar xvf Python-${{ matrix.python-sw }}.tar.xz > /dev/null 2>&1
            cd Python-${{ matrix.python-sw }}
            ./configure --enable-shared --disable-test-modules --prefix=/opt/build_python/installed
            make -j 8 altinstall
            tree -Capug /opt/build_python
          copy_artifact_path: ./dist
          copy_artifact_dest: ./wheelhouse

      # DA ALTRO JOB
#      - uses: actions/upload-artifact@v3
#        name: Upload wheel
#        with:
#          name: built_artifacts
#          path: ./wheelhouse/*
